# components/resource_tracker.py (con l√≠neas divisorias reorganizadas)
import streamlit as st
import random

def display_resources():
    """Muestra los recursos del jugador de forma visual con indicadores de cambio mejorados"""
    resources = st.session_state.resources
    
    # Obtener cambios recientes (si existen)
    recent_changes = st.session_state.get("recent_resource_changes", {})
    
    # Mostrar progreso en la historia
    from stories.amazon_voices.chapters import CHAPTERS
    current = st.session_state.current_chapter + 1
    total = len(CHAPTERS)
    st.markdown("### Progreso")
    st.progress(current/total)
    st.write(f"Cap√≠tulo {current} de {total}")
    
    # Funci√≥n para mostrar cada recurso
    def display_resource(name, emoji, level, change=0):
        st.markdown(f"### {emoji} {name}", help=f"Nivel actual de {name.lower()}: {level}/5")
        
        # Mostrar puntos
        dots_html = ""
        for i in range(5):
            if i < level:
                dots_html += "‚óè "
            else:
                dots_html += "‚óã "
        
        # Preparar indicador de cambio
        change_html = ""
        if change > 0:
            change_html = f"<span class='resource-change resource-increase'>+{change} ‚Üë</span>"
        elif change < 0:
            change_html = f"<span class='resource-change resource-decrease'>{change} ‚Üì</span>"
        
        # Mostrar puntos y cambio en la misma l√≠nea
        st.markdown(f"""
        <div style='display: flex; align-items: center;'>
            <div class='resource-dots'>{dots_html}</div>
            {change_html}
        </div>
        """, unsafe_allow_html=True)
    
    # Mostrar cada recurso
    display_resource("Confianza", "ü§ù", resources["confidence"], 
                    recent_changes.get("confidence", 0))
    
    display_resource("Conocimiento", "üìö", resources["knowledge"], 
                    recent_changes.get("knowledge", 0))
    
    display_resource("Influencia", "‚ú®", resources["influence"], 
                    recent_changes.get("influence", 0))
    
    # A√±adir l√≠nea separadora entre recursos y consejos del mentor
    st.markdown("---")
    
    # Funci√≥n para obtener consejos contextuales espec√≠ficos para cada cap√≠tulo
    def get_chapter_advice(chapter_index):
        # Consejos detallados y espec√≠ficos para cada cap√≠tulo
        chapter_advice = {
            0: [
                "Las primeras impresiones son cruciales. Muestra respeto por las costumbres locales y pregunta antes de actuar.",
                "Observa las din√°micas de poder: qui√©n habla, qui√©n escucha y qui√©n toma las decisiones finales.",
                "La forma en que te presentas establecer√° expectativas y posibilidades futuras. S√© honesto sobre tus objetivos.",
                "En comunidades con experiencias previas negativas, la transparencia es fundamental para construir confianza."
            ],
            1: [
                "Cuando te pregunten tu opini√≥n tan directamente, reconoce primero lo que no sabes antes de ofrecer ideas.",
                "Las soluciones externas rara vez funcionan sin adaptaci√≥n local. Enfatiza la colaboraci√≥n, no la imposici√≥n.",
                "Preg√∫ntate c√≥mo tu presencia influye en la din√°mica de la reuni√≥n. ¬øEst√°n todos expresando libremente sus ideas?",
                "A veces, lo m√°s valioso que puedes aportar no es una respuesta, sino un marco para pensar diferentes posibilidades."
            ],
            2: [
                "Don Manuel est√° compartiendo no solo p√©rdida ambiental, sino la erosi√≥n de la memoria cultural asociada al paisaje.",
                "Este recorrido es una invitaci√≥n a entender c√≥mo el territorio es tambi√©n un archivo de historias y relaciones.",
                "Cuando un anciano comparte un lugar as√≠, est√° evaluando si puedes ver m√°s all√° de los √°rboles, hacia las conexiones invisibles.",
                "Considera la importancia del tiempo: lo que tom√≥ d√©cadas crecer se destruy√≥ en horas. ¬øQu√© significa esto para las soluciones propuestas?"
            ],
            3: [
                "El dilema de El√≠as es com√∫n: las habilidades adquiridas fuera parecen in√∫tiles si no pueden aplicarse en casa.",
                "La brecha digital va m√°s all√° del acceso a la tecnolog√≠a; implica qui√©n puede contar su historia al mundo.",
                "Considera soluciones h√≠bridas que combinen m√©todos tradicionales con nuevas tecnolog√≠as accesibles localmente.",
                "Las herramientas digitales pueden ser poderosas, pero solo si son apropiadas y sostenibles en el contexto local."
            ],
            4: [
                "La radio representa m√°s que un medio de comunicaci√≥n; es un s√≠mbolo de la voz colectiva de la comunidad.",
                "A veces, recuperar herramientas del pasado puede ser m√°s efectivo que introducir nuevas tecnolog√≠as.",
                "Busca entender por qu√© la radio dej√≥ de funcionar - podr√≠a revelar obst√°culos sociales adem√°s de t√©cnicos.",
                "Considera c√≥mo empoderar a j√≥venes como Yuriko para que se apropien de los medios de comunicaci√≥n comunitarios."
            ],
            5: [
                "Este conflicto refleja tensiones generacionales presentes en muchas comunidades que enfrentan cambios r√°pidos.",
                "Evita tomar partido inmediatamente. Busca los valores compartidos detr√°s de posiciones aparentemente opuestas.",
                "La clave no es elegir entre tradici√≥n y modernidad, sino crear puentes que permitan a la comunidad evolucionar sin perder su esencia.",
                "Observa qui√©n no est√° hablando en este debate. A veces, las perspectivas m√°s valiosas son las menos ruidosas."
            ],
            6: [
                "Una propuesta concreta demuestra que has estado escuchando. Int√©gra las preocupaciones de diferentes grupos.",
                "Las mejores soluciones son aquellas que la comunidad puede implementar y mantener despu√©s de tu partida.",
                "Considera c√≥mo tu propuesta distribuye roles y responsabilidades. ¬øRefuerza o desaf√≠a las estructuras de poder existentes?",
                "El momento de proponer acci√≥n es delicado - debe ser lo suficientemente ambicioso para inspirar y realista para implementar."
            ],
            7: [
                "Los obst√°culos inesperados revelan suposiciones que no hab√≠as cuestionado. Usa esto como oportunidad de aprendizaje.",
                "La adaptaci√≥n es una forma de respeto: muestra que valoras m√°s el proceso y las personas que tu plan original.",
                "Involucra a la comunidad en la resoluci√≥n de problemas. Las soluciones colectivas tienen mayor legitimidad.",
                "Recuerda que los fracasos visibles y honestos construyen m√°s confianza que √©xitos superficiales."
            ],
            8: [
                "El verdadero √©xito ocurre cuando tu papel pasa de l√≠der a facilitador. Celebra este cambio.",
                "Aprecia c√≥mo cada generaci√≥n aporta conocimientos distintos pero igual de valiosos al proceso.",
                "Documenta este momento de co-creaci√≥n. Es un modelo que la comunidad puede replicar en futuros desaf√≠os.",
                "La transferencia de habilidades es tan importante como la soluci√≥n misma. ¬øQui√©n puede ense√±ar a otros lo aprendido?"
            ],
            9: [
                "El control de la narrativa es un tema de poder. Considera qui√©n decide qu√© historias se cuentan y c√≥mo.",
                "Ayuda a establecer protocolos claros sobre c√≥mo la comunidad quiere ser representada ante el mundo exterior.",
                "Las buenas intenciones externas pueden causar da√±o sin la gu√≠a adecuada. La comunidad debe liderar este proceso.",
                "Piensa en sistemas de retroalimentaci√≥n para que la comunidad pueda evaluar c√≥mo se cuenta su historia."
            ],
            10: [
                "Tu propuesta final debe enfocarse en fortalecer la autonom√≠a y capacidades locales, no en mantener dependencias.",
                "Reflexiona sobre tu propio aprendizaje y c√≥mo ha cambiado tu perspectiva desde tu llegada.",
                "Una estrategia sostenible considera amenazas externas pero se construye sobre fortalezas internas de la comunidad.",
                "El mayor regalo que puedes dejar no es tu soluci√≥n, sino la confianza renovada de la comunidad en sus propias capacidades."
            ]
        }
        
        # Proporcionar consejos gen√©ricos si el cap√≠tulo no est√° en la lista
        default_advice = [
            "Escucha atentamente las necesidades expresadas e impl√≠citas de la comunidad.",
            "Considera c√≥mo tus acciones afectar√°n las din√°micas locales a largo plazo.",
            "Busca soluciones que respeten tanto la tradici√≥n como la necesidad de adaptaci√≥n."
        ]
        
        # Seleccionar aleatoriamente uno de los consejos para el cap√≠tulo actual
        selected_advice = random.choice(chapter_advice.get(chapter_index, default_advice))
        return selected_advice
    
    # Definir estilos CSS para animaciones y apariencia del mentor
    st.markdown("""
    <style>
    @keyframes pulse {
        0% { transform: scale(1); opacity: 1; }
        50% { transform: scale(1.3); opacity: 1; }
        100% { transform: scale(1); opacity: 1; }
    }
    .resource-change {
        display: inline-block;
        animation: pulse 1.5s infinite;
        font-weight: bold;
        margin-left: 10px;
        padding: 2px 8px;
        border-radius: 12px;
    }
    .resource-increase {
        background-color: rgba(76, 175, 80, 0.2);
        color: #4CAF50;
    }
    .resource-decrease {
        background-color: rgba(244, 67, 54, 0.2);
        color: #F44336;
    }
    .resource-dots {
        font-size: 24px;
        letter-spacing: 4px;
        margin-top: 0;
    }
    .mentor-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: #4F8BF9;
        color: white;
        font-size: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 10px;
        float: left;
    }
    .mentor-message {
        background-color: rgba(38, 39, 48, 0.8); /* Oscuro para combinar con tema Streamlit */
        border-left: 3px solid #4F8BF9;
        padding: 10px;
        margin: 10px 0;
        border-radius: 0 5px 5px 0;
        color: #fafafa;
    }
    </style>
    """, unsafe_allow_html=True)
    
    # Secci√≥n de consejos del mentor (visible directamente despu√©s de recursos)
    st.markdown("### üí° Consejos del Mentor")
    
    # Obtener consejo espec√≠fico para el cap√≠tulo actual
    mentor_advice = get_chapter_advice(st.session_state.current_chapter)
    
    # Mostrar consejo del mentor con estilo
    st.markdown(f"""
    <div class="mentor-message">
        <div class="mentor-avatar">M</div>
        <p>{mentor_advice}</p>
    </div>
    """, unsafe_allow_html=True)
    
    # A√±adir resumen del cuaderno
    with st.expander("üìî Resumen del Cuaderno"):
        st.write(f"**Personajes**: {len(st.session_state.notebook['characters'])}")
        st.write(f"**Descubrimientos**: {len(st.session_state.notebook['discoveries'])}")
        st.write(f"**Hechos importantes**: {len(st.session_state.notebook['facts'])}")
    
    # Limpiar los cambios recientes despu√©s de mostrarlos
    if hasattr(st.session_state, "recent_resource_changes"):
        st.session_state.recent_resource_changes = {}
    
    # A√±adir l√≠nea separadora antes de opciones de desarrollo
    st.markdown("---")
    
    # Secci√≥n de opciones de desarrollo (expandible)
    with st.expander("‚öôÔ∏è Opciones de desarrollo"):
        # Checkbox para alternar entre IA y respuestas pregrabadas
        current_value = st.session_state.get("use_pregrabadas", False)
        use_pregrabadas = st.checkbox(
            "Activar modo offline", 
            value=current_value,
            help="Activa esta opci√≥n para evitar llamados a la API y continuar la historia sin internet"
        )
        
        # Actualizar estado si cambia
        if use_pregrabadas != current_value:
            st.session_state["use_pregrabadas"] = use_pregrabadas
            st.toast("‚úÖ Modo de respuestas cambiado" + 
                   (" a historia lineal" if use_pregrabadas else " a IA"))